{"ast":null,"code":"var _jsxFileName = \"/home/kucing/project/covid-app/components/buttonForm/buttonForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst buttonForm = () => {\n  _s();\n\n  const step = useSelector(state => state.formReducer.step);\n\n  const checkstepforButton = params => {\n    switch (params) {\n      case 1:\n        return __jsx(Button1, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 16\n          }\n        });\n\n      case 2:\n        return __jsx(Button2, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        null;\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const Button1 = () => {\n    const handleContinue = () => {\n      dispatch({\n        type: CONTINUE\n      });\n    };\n\n    return __jsx(React.Fragment, null, __jsx(\"button\", {\n      onClick: handleContinue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, \"Next\"));\n  };\n\n  const Button2 = () => {\n    const handleContinue = () => {\n      dispatch({\n        type: CONTINUE\n      });\n    };\n\n    const handlePrevious = () => {\n      dispatch({\n        type: PREVIOUS\n      });\n    };\n\n    return __jsx(React.Fragment, null, __jsx(\"button\", {\n      onClick: handleContinue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, \"Previous\"), __jsx(\"button\", {\n      onClick: handlePrevious,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, \"Next\"));\n  };\n\n  return __jsx(React.Fragment, null, checkstepforButton(step));\n};\n\n_s(buttonForm, \"JztWq42TRgVA15/WVcb/jEsBQxs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport default buttonForm;","map":{"version":3,"sources":["/home/kucing/project/covid-app/components/buttonForm/buttonForm.js"],"names":["React","useSelector","useDispatch","buttonForm","step","state","formReducer","checkstepforButton","params","dispatch","Button1","handleContinue","type","CONTINUE","Button2","handlePrevious","PREVIOUS"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,IAAI,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBF,IAA5B,CAAxB;;AACA,QAAMG,kBAAkB,GAAIC,MAAD,IAAY;AACrC,YAAQA,MAAR;AACE,WAAK,CAAL;AACE,eAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEF,WAAK,CAAL;AACE,eAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF;AACA;AAPF;AASD,GAVD;;AAYA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,QAAMQ,OAAO,GAAG,MAAM;AACpB,UAAMC,cAAc,GAAG,MAAM;AAC3BF,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAEC;AAAP,OAAD,CAAR;AACD,KAFD;;AAGA,WACE,4BACA;AAAQ,MAAA,OAAO,EAAEF,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CADF;AAKD,GATD;;AAWA,QAAMG,OAAO,GAAG,MAAM;AACpB,UAAMH,cAAc,GAAG,MAAM;AAC3BF,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAEC;AAAP,OAAD,CAAR;AACD,KAFD;;AAIA,UAAME,cAAc,GAAG,MAAM;AAC3BN,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAEI;AAAP,OAAD,CAAR;AACD,KAFD;;AAGA,WACE,4BACA;AAAQ,MAAA,OAAO,EAAEL,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA;AAAQ,MAAA,OAAO,EAAEI,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,CADF;AAMD,GAdD;;AAeA,SACE,4BACGR,kBAAkB,CAACH,IAAD,CADrB,CADF;AAKD,CA9CD;;GAAMD,U;UACSF,W,EAaIC,W;;;AAkCnB,eAAeC,UAAf","sourcesContent":["import React from 'react'\nimport { useSelector,useDispatch } from \"react-redux\";\n\nconst buttonForm = () => {\n  const step = useSelector(state => state.formReducer.step)\n  const checkstepforButton = (params) => {\n    switch (params) {\n      case 1:\n        return <Button1 />\n      \n      case 2:\n        return <Button2 />\n      default:\n      null\n    }\n  }\n  \n  const dispatch = useDispatch();\n  const Button1 = () => {\n    const handleContinue = () => {\n      dispatch({type: CONTINUE})\n    }\n    return(\n      <>\n      <button onClick={handleContinue}>Next</button>\n      </>\n    )\n  }\n  \n  const Button2 = () => {\n    const handleContinue = () => {\n      dispatch({type: CONTINUE})\n    }\n  \n    const handlePrevious = () => {\n      dispatch({type: PREVIOUS})\n    }\n    return(\n      <>\n      <button onClick={handleContinue}>Previous</button>\n      <button onClick={handlePrevious}>Next</button>\n      </>\n    )\n  }\n  return (\n    <>\n      {checkstepforButton(step)}\n    </>\n  )\n}\n\nexport default buttonForm;"]},"metadata":{},"sourceType":"module"}