{"ast":null,"code":"var _jsxFileName = \"/home/kucing/project/covid-app/components/form-formik/form.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport styled from \"styled-components\";\nconst Wrapper = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\nconst ListForm = styled.div`\n  padding: 8px; \n`;\nconst Error = styled.div`\n  color: red;\n`;\nconst WrapBtn = styled.div`\n  margin: 10px;\n`;\nconst BtnSubmit = styled.button`\n  background-color: grey ;\n  padding: 10px 15px ;\n  cursor: pointer;\n`;\nconst InputForm = styled.input`\n  width: 400px;\n  padding: 6px 12px;\n  font-size: 14px;\n`;\nconst LabelForm = styled.label`\n  font-weight: bold;\n  display: flex;\n  margin-bottom: 5px;\n`;\nconst validationSchema = Yup.object({\n  nama: Yup.string().required('Harus diisi!').min(3, 'Harus 3 karakter atau lebih!'),\n  email: Yup.string().required('Harus diisi!').email('Format email tidak valid!')\n});\nconst initialValues = {\n  nama: '',\n  email: ''\n};\n\nconst onSubmit = values => {\n  console.log(\"Form values\", values);\n};\n\nconst ExampleForm = () => {\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(ListForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(LabelForm, {\n    htmlFor: \"nama\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Nama Lengkap\"), __jsx(InputForm, {\n    type: \"text\",\n    id: \"nama\",\n    name: \"nama\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nama,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), formik.touched.nama && formik.errors.nama ? __jsx(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, formik.errors.nama) : null), __jsx(ListForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(LabelForm, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"E-mail\"), __jsx(InputForm, {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), formik.touched.email && formik.errors.email ? __jsx(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, formik.errors.email) : null), __jsx(WrapBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(BtnSubmit, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \" Daftar \"))));\n};\n\nexport default ExampleForm;","map":{"version":3,"sources":["/home/kucing/project/covid-app/components/form-formik/form.js"],"names":["React","useFormik","Yup","styled","Wrapper","form","ListForm","div","Error","WrapBtn","BtnSubmit","button","InputForm","input","LabelForm","label","validationSchema","object","nama","string","required","min","email","initialValues","onSubmit","values","console","log","ExampleForm","formik","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport styled from \"styled-components\"\n\n\nconst Wrapper = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`\nconst ListForm = styled.div`\n  padding: 8px; \n`\nconst Error = styled.div`\n  color: red;\n`\nconst WrapBtn = styled.div`\n  margin: 10px;\n`\n\nconst BtnSubmit = styled.button`\n  background-color: grey ;\n  padding: 10px 15px ;\n  cursor: pointer;\n`\nconst InputForm = styled.input`\n  width: 400px;\n  padding: 6px 12px;\n  font-size: 14px;\n`\n\nconst LabelForm = styled.label`\n  font-weight: bold;\n  display: flex;\n  margin-bottom: 5px;\n`\n\nconst validationSchema = Yup.object({\n  nama: Yup.string().required('Harus diisi!').min(3, 'Harus 3 karakter atau lebih!'),\n  email: Yup.string().required('Harus diisi!').email('Format email tidak valid!'),\n});\n\nconst initialValues = {\n  nama: '',\n  email: '',\n}\n\nconst onSubmit = values => {\n  console.log(\"Form values\", values);\n}\n\nconst ExampleForm = () => {\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema,\n  })\n\n  return (\n    <div>\n      <Wrapper>\n        <ListForm>\n          <LabelForm htmlFor=\"nama\">Nama Lengkap</LabelForm>\n          <InputForm\n            type=\"text\"\n            id=\"nama\"\n            name=\"nama\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.nama}\n\n          />\n          {formik.touched.nama && formik.errors.nama ? (\n            <Error>{formik.errors.nama}</Error>\n          ) : null}\n        </ListForm>\n\n        <ListForm>\n          <LabelForm htmlFor=\"email\">E-mail</LabelForm>\n          <InputForm\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          {formik.touched.email && formik.errors.email ? (\n            <Error>{formik.errors.email}</Error>\n          ) : null}\n        </ListForm>\n        <WrapBtn>\n          <BtnSubmit type=\"submit\"> Daftar </BtnSubmit>\n        </WrapBtn>\n\n      </Wrapper>\n    </div>\n  )\n}\n\n\nexport default ExampleForm;\n"]},"metadata":{},"sourceType":"module"}