{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const INITIAL_STATE = {\n  step: 1\n};\n\nconst formReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"CONTINUE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        step: state.step + 1\n      });\n\n    case \"PREVIOUS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        step: state.step - 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default formReducer;","map":{"version":3,"sources":["/home/kucing/project/covid-app/appredux/reducer/formReducer.js"],"names":["INITIAL_STATE","step","formReducer","state","action","type"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG;AAC3BC,EAAAA,IAAI,EAAE;AADqB,CAAtB;;AAIP,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,6CACKF,KADL;AAEEF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,GAAa;AAFrB;;AAKA,SAAK,UAAL;AACA,6CACKE,KADL;AAEEF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,GAAa;AAFrB;;AAIF;AACE,aAAOE,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAeD,WAAf","sourcesContent":["export const INITIAL_STATE = {\n  step: 1,\n}\n\nconst formReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"CONTINUE\":\n      return {\n        ...state,\n        step: state.step + 1\n      }\n\n      case \"PREVIOUS\":\n      return {\n        ...state,\n        step: state.step - 1\n      }\n    default:\n      return state\n  }\n}\n\nexport default formReducer"]},"metadata":{},"sourceType":"module"}