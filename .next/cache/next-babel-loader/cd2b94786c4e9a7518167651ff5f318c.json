{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/kucing/project/covid-app/components/form-formik/form.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, ErrorMessage, Field } from 'formik';\nimport * as Yup from 'yup';\nimport styled from \"styled-components\";\nimport ExampleForm from './example';\nconst Wrapper = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n_c = Wrapper;\nconst ListForm = styled.div`\n  padding: 8px; \n`;\n_c2 = ListForm;\nconst Error = styled.div`\n  color: red;\n`;\nconst WrapBtn = styled.div`\n  margin: 10px;\n`;\n_c3 = WrapBtn;\nconst BtnSubmit = styled.button`\n  background-color: grey ;\n  padding: 10px 15px ;\n  cursor: pointer;\n`;\n_c4 = BtnSubmit;\nconst InputForm = styled.input`\n  width: 400px;\n  padding: 6px 12px;\n  font-size: 14px;\n`;\n_c5 = InputForm;\nconst LabelForm = styled.label`\n  font-weight: bold;\n  display: flex;\n  margin-bottom: 5px;\n`;\n_c6 = LabelForm;\nconst validationSchema = Yup.object({\n  nama: Yup.string().required('Harus diisi!').min(3, 'Harus 3 karakter atau lebih!'),\n  email: Yup.string().required('Harus diisi!').email('Format email tidak valid!')\n});\nconst initialValues = {\n  nama: '',\n  email: ''\n};\n\nconst onSubmit = values => {\n  console.log(\"Form values\", values);\n};\n\nconst Form = () => {\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(ListForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(LabelForm, {\n    htmlFor: \"nama\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Nama Lengkap\"), __jsx(InputForm, _extends({\n    type: \"text\",\n    id: \"nama\",\n    name: \"nama\"\n  }, formik.getFieldProps('nama'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), __jsx(ErrorMessage, {\n    name: \"nama\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), __jsx(ListForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(LabelForm, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"E-mail\"), __jsx(InputForm, _extends({\n    type: \"email\",\n    id: \"email\",\n    name: \"email\"\n  }, formik.getFieldProps('email'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), __jsx(ErrorMessage, {\n    name: \"nama\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), __jsx(WrapBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(BtnSubmit, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \" Daftar \"))));\n};\n\n_c7 = Form;\nexport default Form;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"ListForm\");\n$RefreshReg$(_c3, \"WrapBtn\");\n$RefreshReg$(_c4, \"BtnSubmit\");\n$RefreshReg$(_c5, \"InputForm\");\n$RefreshReg$(_c6, \"LabelForm\");\n$RefreshReg$(_c7, \"Form\");","map":{"version":3,"sources":["/home/kucing/project/covid-app/components/form-formik/form.js"],"names":["React","Formik","ErrorMessage","Field","Yup","styled","ExampleForm","Wrapper","form","ListForm","div","Error","WrapBtn","BtnSubmit","button","InputForm","input","LabelForm","label","validationSchema","object","nama","string","required","min","email","initialValues","onSubmit","values","console","log","Form","formik","getFieldProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,KAA/B,QAA4C,QAA5C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AAGA,MAAMC,OAAO,GAAGF,MAAM,CAACG,IAAK;;;;CAA5B;KAAMD,O;AAKN,MAAME,QAAQ,GAAGJ,MAAM,CAACK,GAAI;;CAA5B;MAAMD,Q;AAGN,MAAME,KAAK,GAAGN,MAAM,CAACK,GAAI;;CAAzB;AAGA,MAAME,OAAO,GAAGP,MAAM,CAACK,GAAI;;CAA3B;MAAME,O;AAIN,MAAMC,SAAS,GAAGR,MAAM,CAACS,MAAO;;;;CAAhC;MAAMD,S;AAKN,MAAME,SAAS,GAAGV,MAAM,CAACW,KAAM;;;;CAA/B;MAAMD,S;AAMN,MAAME,SAAS,GAAGZ,MAAM,CAACa,KAAM;;;;CAA/B;MAAMD,S;AAMN,MAAME,gBAAgB,GAAGf,GAAG,CAACgB,MAAJ,CAAW;AAClCC,EAAAA,IAAI,EAAEjB,GAAG,CAACkB,MAAJ,GAAaC,QAAb,CAAsB,cAAtB,EAAsCC,GAAtC,CAA0C,CAA1C,EAA6C,8BAA7C,CAD4B;AAElCC,EAAAA,KAAK,EAAErB,GAAG,CAACkB,MAAJ,GAAaC,QAAb,CAAsB,cAAtB,EAAsCE,KAAtC,CAA4C,2BAA5C;AAF2B,CAAX,CAAzB;AAKA,MAAMC,aAAa,GAAG;AACpBL,EAAAA,IAAI,EAAE,EADc;AAEpBI,EAAAA,KAAK,EAAE;AAFa,CAAtB;;AAKA,MAAME,QAAQ,GAAGC,MAAM,IAAI;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAA3B;AACD,CAFD;;AAIA,MAAMG,IAAI,GAAG,MAAM;AACjB,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAEL,aADjB;AAEE,IAAA,gBAAgB,EAAEP,gBAFpB;AAGE,IAAA,QAAQ,EAAEQ,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,IAAI,EAAC;AAHP,KAIMK,MAAM,CAACC,aAAP,CAAqB,MAArB,CAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EASE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CALF,EAoBE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,IAAI,EAAC;AAHP,KAIMD,MAAM,CAACC,aAAP,CAAqB,OAArB,CAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAQE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CApBF,EAiCE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAjCF,CADF,CADF;AAyCD,CA1CD;;MAAMF,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { Formik, ErrorMessage, Field } from 'formik';\nimport * as Yup from 'yup';\nimport styled from \"styled-components\"\nimport ExampleForm from './example';\n\n\nconst Wrapper = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`\nconst ListForm = styled.div`\n  padding: 8px; \n`\nconst Error = styled.div`\n  color: red;\n`\nconst WrapBtn = styled.div`\n  margin: 10px;\n`\n\nconst BtnSubmit = styled.button`\n  background-color: grey ;\n  padding: 10px 15px ;\n  cursor: pointer;\n`\nconst InputForm = styled.input`\n  width: 400px;\n  padding: 6px 12px;\n  font-size: 14px;\n`\n\nconst LabelForm = styled.label`\n  font-weight: bold;\n  display: flex;\n  margin-bottom: 5px;\n`\n\nconst validationSchema = Yup.object({\n  nama: Yup.string().required('Harus diisi!').min(3, 'Harus 3 karakter atau lebih!'),\n  email: Yup.string().required('Harus diisi!').email('Format email tidak valid!'),\n});\n\nconst initialValues = {\n  nama: '',\n  email: '',\n}\n\nconst onSubmit = values => {\n  console.log(\"Form values\", values);\n}\n\nconst Form = () => {\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <ListForm>\n          <LabelForm htmlFor=\"nama\">Nama Lengkap</LabelForm>\n          <InputForm\n            type=\"text\"\n            id=\"nama\"\n            name=\"nama\"\n            {...formik.getFieldProps('nama')}\n\n          />\n          <ErrorMessage name='nama' />\n          {/* {formik.touched.nama && formik.errors.nama ? (\n            <Error>{formik.errors.nama}</Error>\n          ) : null} */}\n        </ListForm>\n\n        <ListForm>\n          <LabelForm htmlFor=\"email\">E-mail</LabelForm>\n          <InputForm\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            {...formik.getFieldProps('email')}\n          />\n          <ErrorMessage name='nama' />\n          {/* {formik.touched.email && formik.errors.email ? (\n            <Error>{formik.errors.email}</Error>\n          ) : null} */}\n        </ListForm>\n        <WrapBtn>\n          <BtnSubmit type=\"submit\"> Daftar </BtnSubmit>\n        </WrapBtn>\n      </Formik>\n    </Wrapper>\n  )\n}\n\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}